{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nimport { action } from './action';\nimport { config } from './configureActions';\nexport var actions = function actions() {\n  var options = config;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var names = args; // args argument can be a single argument as an array\n\n  if (names.length === 1 && Array.isArray(names[0])) {\n    var _names = names;\n\n    var _names2 = _slicedToArray(_names, 1);\n\n    names = _names2[0];\n  } // last argument can be options\n\n\n  if (names.length !== 1 && typeof names[names.length - 1] !== 'string') {\n    options = Object.assign({}, config, names.pop());\n  }\n\n  var namesObject = names[0];\n\n  if (names.length !== 1 || typeof namesObject === 'string') {\n    namesObject = {};\n    names.forEach(function (name) {\n      namesObject[name] = name;\n    });\n  }\n\n  var actionsObject = {};\n  Object.keys(namesObject).forEach(function (name) {\n    actionsObject[name] = action(namesObject[name], options);\n  });\n  return actionsObject;\n};","map":{"version":3,"sources":["/Users/michaelnisnevich/Desktop/typescript/React_Kabzda_kak_podrobno/node_modules/@storybook/addon-actions/dist/esm/preview/actions.js"],"names":["_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","isArray","action","config","actions","options","_len","arguments","args","_key","names","_names","_names2","assign","pop","namesObject","forEach","actionsObject","keys"],"mappings":"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","sourcesContent":["import \"core-js/modules/es.object.assign.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.array.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.from.js\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nimport { action } from './action';\nimport { config } from './configureActions';\nexport var actions = function actions() {\n  var options = config;\n\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  var names = args; // args argument can be a single argument as an array\n\n  if (names.length === 1 && Array.isArray(names[0])) {\n    var _names = names;\n\n    var _names2 = _slicedToArray(_names, 1);\n\n    names = _names2[0];\n  } // last argument can be options\n\n\n  if (names.length !== 1 && typeof names[names.length - 1] !== 'string') {\n    options = Object.assign({}, config, names.pop());\n  }\n\n  var namesObject = names[0];\n\n  if (names.length !== 1 || typeof namesObject === 'string') {\n    namesObject = {};\n    names.forEach(function (name) {\n      namesObject[name] = name;\n    });\n  }\n\n  var actionsObject = {};\n  Object.keys(namesObject).forEach(function (name) {\n    actionsObject[name] = action(namesObject[name], options);\n  });\n  return actionsObject;\n};"]},"metadata":{},"sourceType":"module"}