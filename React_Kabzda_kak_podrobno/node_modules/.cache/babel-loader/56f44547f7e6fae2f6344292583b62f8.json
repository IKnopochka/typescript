{"ast":null,"code":"export function dedent(templ) {\n  var values = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    values[_i - 1] = arguments[_i];\n  }\n\n  var strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n  strings[strings.length - 1] = strings[strings.length - 1].replace(/\\r?\\n([\\t ]*)$/, '');\n  var indentLengths = strings.reduce(function (arr, str) {\n    var matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n\n    if (matches) {\n      return arr.concat(matches.map(function (match) {\n        var _a, _b;\n\n        return (_b = (_a = match.match(/[\\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0;\n      }));\n    }\n\n    return arr;\n  }, []);\n\n  if (indentLengths.length) {\n    var pattern_1 = new RegExp(\"\\n[\\t ]{\" + Math.min.apply(Math, indentLengths) + \"}\", 'g');\n    strings = strings.map(function (str) {\n      return str.replace(pattern_1, '\\n');\n    });\n  }\n\n  strings[0] = strings[0].replace(/^\\r?\\n/, '');\n  var string = strings[0];\n  values.forEach(function (value, i) {\n    var endentations = string.match(/(?:^|\\n)( *)$/);\n    var endentation = endentations ? endentations[1] : '';\n    var indentedValue = value;\n\n    if (typeof value === 'string' && value.includes('\\n')) {\n      indentedValue = String(value).split('\\n').map(function (str, i) {\n        return i === 0 ? str : \"\" + endentation + str;\n      }).join('\\n');\n    }\n\n    string += indentedValue + strings[i + 1];\n  });\n  return string;\n}\nexport default dedent;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,MAAV,CACJ,KADI,EACgC;AACpC,MAAA,MAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAoB;AAApB,IAAA,MAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAEA,MAAI,OAAO,GAAG,KAAK,CAAC,IAAN,CAAW,OAAO,KAAP,KAAiB,QAAjB,GAA4B,CAAC,KAAD,CAA5B,GAAsC,KAAjD,CAAd;AAGA,EAAA,OAAO,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,CAAP,GAA8B,OAAO,CAAC,OAAO,CAAC,MAAR,GAAiB,CAAlB,CAAP,CAA4B,OAA5B,CAC5B,gBAD4B,EAE5B,EAF4B,CAA9B;AAMA,MAAM,aAAa,GAAG,OAAO,CAAC,MAAR,CAAe,UAAC,GAAD,EAAM,GAAN,EAAS;AAC5C,QAAM,OAAO,GAAG,GAAG,CAAC,KAAJ,CAAU,qBAAV,CAAhB;;AACA,QAAI,OAAJ,EAAa;AACX,aAAO,GAAG,CAAC,MAAJ,CACL,OAAO,CAAC,GAAR,CAAY,UAAC,KAAD,EAAM;AAAA,YAAA,EAAA,EAAA,EAAA;;AAAK,eAAA,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,KAAK,CAAC,KAAN,CAAY,QAAZ,CAAA,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,MAAvB,MAA6B,IAA7B,IAA6B,EAAA,KAAA,KAAA,CAA7B,GAA6B,EAA7B,GAAiC,CAAjC;AAAkC,OAAzD,CADK,CAAP;AAGD;;AACD,WAAO,GAAP;AACD,GARqB,EAQT,EARS,CAAtB;;AAWA,MAAI,aAAa,CAAC,MAAlB,EAA0B;AACxB,QAAM,SAAO,GAAG,IAAI,MAAJ,CAAW,aAAW,IAAI,CAAC,GAAL,CAAQ,KAAR,CAAA,IAAA,EAAY,aAAZ,CAAX,GAAoC,GAA/C,EAAqD,GAArD,CAAhB;AAEA,IAAA,OAAO,GAAG,OAAO,CAAC,GAAR,CAAY,UAAC,GAAD,EAAI;AAAK,aAAA,GAAG,CAAC,OAAJ,CAAY,SAAZ,EAAA,IAAA,CAAA;AAA0B,KAA/C,CAAV;AACD;;AAGD,EAAA,OAAO,CAAC,CAAD,CAAP,GAAa,OAAO,CAAC,CAAD,CAAP,CAAW,OAAX,CAAmB,QAAnB,EAA6B,EAA7B,CAAb;AAGA,MAAI,MAAM,GAAG,OAAO,CAAC,CAAD,CAApB;AAEA,EAAA,MAAM,CAAC,OAAP,CAAe,UAAC,KAAD,EAAQ,CAAR,EAAS;AAEtB,QAAM,YAAY,GAAG,MAAM,CAAC,KAAP,CAAa,eAAb,CAArB;AACA,QAAM,WAAW,GAAG,YAAY,GAAG,YAAY,CAAC,CAAD,CAAf,GAAqB,EAArD;AACA,QAAI,aAAa,GAAG,KAApB;;AAEA,QAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,KAAK,CAAC,QAAN,CAAe,IAAf,CAAjC,EAAuD;AACrD,MAAA,aAAa,GAAG,MAAM,CAAC,KAAD,CAAN,CACb,KADa,CACP,IADO,EAEb,GAFa,CAET,UAAC,GAAD,EAAM,CAAN,EAAO;AACV,eAAO,CAAC,KAAK,CAAN,GAAU,GAAV,GAAgB,KAAG,WAAH,GAAiB,GAAxC;AACD,OAJa,EAKb,IALa,CAKR,IALQ,CAAhB;AAMD;;AAED,IAAA,MAAM,IAAI,aAAa,GAAG,OAAO,CAAC,CAAC,GAAG,CAAL,CAAjC;AACD,GAhBD;AAkBA,SAAO,MAAP;AACD;AAED,eAAe,MAAf","sourceRoot":"","sourcesContent":["export function dedent(templ) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    var strings = Array.from(typeof templ === 'string' ? [templ] : templ);\n    strings[strings.length - 1] = strings[strings.length - 1].replace(/\\r?\\n([\\t ]*)$/, '');\n    var indentLengths = strings.reduce(function (arr, str) {\n        var matches = str.match(/\\n([\\t ]+|(?!\\s).)/g);\n        if (matches) {\n            return arr.concat(matches.map(function (match) { var _a, _b; return (_b = (_a = match.match(/[\\t ]/g)) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0; }));\n        }\n        return arr;\n    }, []);\n    if (indentLengths.length) {\n        var pattern_1 = new RegExp(\"\\n[\\t ]{\" + Math.min.apply(Math, indentLengths) + \"}\", 'g');\n        strings = strings.map(function (str) { return str.replace(pattern_1, '\\n'); });\n    }\n    strings[0] = strings[0].replace(/^\\r?\\n/, '');\n    var string = strings[0];\n    values.forEach(function (value, i) {\n        var endentations = string.match(/(?:^|\\n)( *)$/);\n        var endentation = endentations ? endentations[1] : '';\n        var indentedValue = value;\n        if (typeof value === 'string' && value.includes('\\n')) {\n            indentedValue = String(value)\n                .split('\\n')\n                .map(function (str, i) {\n                return i === 0 ? str : \"\" + endentation + str;\n            })\n                .join('\\n');\n        }\n        string += indentedValue + strings[i + 1];\n    });\n    return string;\n}\nexport default dedent;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}